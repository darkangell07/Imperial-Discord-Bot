"use strict";(()=>{var e={};e.id=81,e.ids=[81],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7773:e=>{e.exports=require("winston")},7147:e=>{e.exports=require("fs")},1017:e=>{e.exports=require("path")},7310:e=>{e.exports=require("url")},4216:(e,r,t)=>{t.r(r),t.d(r,{config:()=>l,default:()=>d,routeModule:()=>p});var s={};t.r(s),t.d(s,{default:()=>handler});var a=t(1802),n=t(7153),o=t(6249),u=t(2524),i=t(492);async function handler(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});try{return i.k.info("Restart requested from dashboard"),(0,u.PZ)(),(0,u.X6)(),r.status(200).json({success:!0,message:"Bot has been restarted. In a serverless environment, this resets the status and enables the bot."})}catch(e){return i.k.error("Error during restart:",e),r.status(500).json({success:!1,message:"Internal server error during restart"})}}let d=(0,o.l)(s,"default"),l=(0,o.l)(s,"config"),p=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/restart",pathname:"/api/restart",bundlePath:"",filename:""},userland:s})}};var r=require("../../webpack-api-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[222,524],()=>__webpack_exec__(4216));module.exports=t})();